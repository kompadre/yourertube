version: '3.2'

services:
  video_repository:
    depends_on:
      rabbit:
        condition: service_healthy
      caddy:
        condition: service_started
    build:
      context: ./services/video_repository
      args:
        USER_ID: ${USER_ID:-0}
        GROUP_ID: ${GROUP_ID:-0}
    volumes:
      - "./services/video_repository/src/:/app"
      - "./common/:/app/common/:ro"
      - "./volumes/media/:/media/"
    environment:
      AMQP_HOST: "${AMQP_HOST}"
      AMQP_PORT: "${AMQP_PORT}"
      AMQP_USER: "${AMQP_USER}"
      AMQP_PASS: "${AMQP_PASS}"
      JWT_SECRET: "${JWT_SECRET}"
  auth:
    build:
      context: ./services/auth
    depends_on:
      - caddy
    volumes:
      - "./services/auth/src/:/app/"
      - "./common/:/app/common/:ro"
    environment:
      JWT_SECRET: "${JWT_SECRET}"
  video_processor:
    depends_on:
      rabbit:
        condition: service_healthy
    build:
      context: ./services/video_processor
    volumes:
      - "./services/video_processor/src/:/app/" 
      - "./common/:/app/common/"
      - "./volumes/media:/media/"
    environment:
      AMQP_HOST: "${AMQP_HOST}"
      AMQP_PORT: "${AMQP_PORT}"
      AMQP_USER: "${AMQP_USER}"
      AMQP_PASS: "${AMQP_PASS}"
      JWT_SECRET: "${JWT_SECRET}"
  front:
    build:
      context: "./services/front/"
    volumes:
      - "./services/front/:/app/"
  caddy:
    image: caddy
    volumes:
      - "./services/caddy/Caddyfile:/etc/caddy/Caddyfile"
      - "./static/:/srv/"
      - "./volumes/media/uploaded/:/uploaded/:ro"
    ports:
      - 80:80
      - 443:443
    depends_on:
      - front
  rabbit:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 2s
      retries: 3
